{"version":3,"sources":["./src/app/forecast-module/forecast.routing.ts","./src/app/forecast-module/config/index.ts","./src/app/forecast-module/services/weather-api.service.ts","./src/app/forecast-module/components/index.ts","./src/app/forecast-module/forecast.module.ts","./src/app/forecast-module/pipes/toCelsius.pipe.ts","./src/app/forecast-module/pipes/index.ts","./src/app/forecast-module/config/weather-api.config.ts","./src/app/forecast-module/components/forecast-page/forecast-page.component.ts","./src/app/forecast-module/components/forecast-detailed/forecast-detailed.component.html","./src/app/forecast-module/components/forecast-page/forecast-page.component.html","./src/app/forecast-module/services/index.ts","./src/app/forecast-module/components/multi-day-forecast-page/multi-day-forecast-page.component.ts","./src/app/forecast-module/components/multi-day-forecast-page/multi-day-forecast-page.component.html","./src/app/forecast-module/services/forecast.service.ts","./src/app/forecast-module/components/forecast-detailed/forecast-detailed.component.ts"],"names":[],"mappings":"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","file":"forecast-module-forecast-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n// Components\r\nimport {\r\n    ForecastPageComponent,\r\n    MultiDayForecastPageComponent,\r\n} from './components';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        pathMatch: 'full',\r\n        component: ForecastPageComponent,\r\n    },\r\n    {\r\n        path: ':zipCode',\r\n        component: MultiDayForecastPageComponent,\r\n        data: {\r\n            days: 5\r\n        }\r\n    }\r\n];\r\n\r\n@NgModule({ imports: [RouterModule.forChild(routes)] })\r\nexport class ForecastRoutingModule { }\r\n","export * from './weather-api.config';\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n// Locals\r\nimport { WeatherMultipleDayResponseData, WeatherResponseData } from '../models';\r\nimport { WEATHER_API_CONFIG, WeatherApiConfigParams } from '../config';\r\n\r\n@Injectable()\r\nexport class WeatcherApiService {\r\n\r\n    constructor(\r\n        @Inject(WEATHER_API_CONFIG) private readonly weatherApiConfigs: WeatherApiConfigParams,\r\n        private readonly http: HttpClient\r\n    ) {\r\n    }\r\n\r\n    getCurrentWeatherByZipCode(zipCode: string): Observable<WeatherResponseData> {\r\n        const url = `http://${this.weatherApiConfigs.apiUrl}/weather?zip=${zipCode}&appid=${this.weatherApiConfigs.appId}`;\r\n        return this.http.get<WeatherResponseData>(url);\r\n    }\r\n\r\n    getMultipleDaysWeatherByZipCode(zipCode: string): Observable<WeatherMultipleDayResponseData> {\r\n        const url = `http://${this.weatherApiConfigs.apiUrl}/forecast?zip=${zipCode}&appid=${this.weatherApiConfigs.appId}`;\r\n        return this.http.get<WeatherMultipleDayResponseData>(url);\r\n    }\r\n}\r\n","export * from './forecast-page/forecast-page.component';\r\nexport * from './multi-day-forecast-page/multi-day-forecast-page.component';\r\nexport * from './forecast-detailed/forecast-detailed.component';\r\n","import { NgModule } from '@angular/core';\r\n// Routes\r\nimport { ForecastRoutingModule } from './forecast.routing';\r\n// Modules\r\nimport { SharedModule } from '../shared-module/shared.module';\r\n// Locals\r\nimport {\r\n    ForecastPageComponent,\r\n    MultiDayForecastPageComponent,\r\n    ForecastDetailedComponent,\r\n} from './components';\r\nimport {\r\n    ForecastService,\r\n    WeatcherApiService,\r\n} from './services';\r\nimport { WEATHER_API_CONFIG, WeatherApiConfigParams } from './config';\r\nimport * as pipes from './pipes';\r\n\r\n@NgModule({\r\n    imports: [\r\n        SharedModule,\r\n        ForecastRoutingModule,\r\n    ],\r\n    declarations: [\r\n        // Pages\r\n        ForecastPageComponent,\r\n        MultiDayForecastPageComponent,\r\n        // Components\r\n        ForecastDetailedComponent,\r\n        // pipes\r\n        pipes.ToCelsiusPipe,\r\n    ],\r\n    providers: [\r\n        ForecastService,\r\n        WeatcherApiService,\r\n        { provide: WEATHER_API_CONFIG, useValue: { apiUrl: 'api.openweathermap.org/data/2.5', appId: '5a4b2d457ecbef9eb2a71e480b947604' } as WeatherApiConfigParams }\r\n    ],\r\n    exports: [\r\n\r\n    ]\r\n})\r\nexport class ForecastModule { }\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'toCelsius',\r\n})\r\nexport class ToCelsiusPipe implements PipeTransform {\r\n    transform(fahrenheitTemp: number, ...args: any[]) {\r\n        return Math.round(fahrenheitTemp - 273);\r\n    }\r\n}\r\n","export * from './toCelsius.pipe';\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport const WEATHER_API_CONFIG = new InjectionToken<WeatherApiConfigParams>('WEATHER_API_CONFIG');\r\n\r\nexport interface WeatherApiConfigParams {\r\n    apiUrl: string;\r\n    appId: string;\r\n}","import { Component, OnDestroy } from \"@angular/core\";\r\nimport { Observable, Subscription } from \"rxjs\";\r\nimport { IForecastData } from \"../../models\";\r\n// Locals\r\nimport { ForecastService } from \"../../services\";\r\n\r\n@Component({\r\n    selector: 'app-forecast-page',\r\n    templateUrl: './forecast-page.component.html',\r\n    styleUrls: []\r\n})\r\nexport class ForecastPageComponent {\r\n\r\n    zipcodeInputValue: string;\r\n\r\n    get zipCodesForecast$(): Observable<IForecastData[]> {\r\n        return this.forecastService.addedZipCodes$;\r\n    }\r\n\r\n    constructor(\r\n        public readonly forecastService: ForecastService,\r\n    ) {\r\n    }\r\n\r\n    // events\r\n    onAddLocationClicked(): void {\r\n        if (this.zipcodeInputValue) {\r\n            this.forecastService.addNewZipCode(this.zipcodeInputValue);\r\n        } else {\r\n            console.warn('We can\\'t add empyt zip code!');\r\n        }\r\n    }\r\n\r\n    onDeleteForecast(forecast: IForecastData): void {\r\n        this.forecastService.removeZipCode(forecast.zipCode);\r\n    }\r\n}","export default \"<div class=\\\"well flex\\\">\\r\\n    <div>\\r\\n        <h3>{{forecast.locationName}} ({{forecast.zipCode}})</h3>\\r\\n        <h4>Current conditions: {{ forecast.currentConditions }}</h4>\\r\\n        <h4>Temperatures today:</h4>\\r\\n        <p>\\r\\n            Current <b>{{forecast.temperature | toCelsius}}</b>\\r\\n        </p>\\r\\n        <p>\\r\\n            Max <b>{{forecast.maxToday | toCelsius}}</b>\\r\\n        </p>\\r\\n        <p>\\r\\n            Min <b>{{forecast.minToday | toCelsius}}</b>\\r\\n        </p>\\r\\n        <p>\\r\\n            <a [routerLink]=\\\"['/forecast', forecast.zipCode]\\\">Show 5-day forecast for Rancho Cordova</a>\\r\\n        </p>\\r\\n    </div>\\r\\n    <div>\\r\\n        <span class=\\\"close\\\" (click)=\\\"onClose()\\\">×</span>\\r\\n        <app-weather-icon [weatherName]=\\\"forecast.currentConditions\\\"></app-weather-icon>\\r\\n    </div>\\r\\n</div>\";","export default \"<div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"well\\\">\\r\\n        <h2>Enter a zipcode:</h2>\\r\\n        <input class=\\\"form-control\\\" placeholder=\\\"Zipcode\\\" type=\\\"text\\\" [(ngModel)]=\\\"zipcodeInputValue\\\">\\r\\n        <br>\\r\\n        <button class=\\\"btn btn-primary\\\" (click)=\\\"onAddLocationClicked()\\\">\\r\\n        Add location\\r\\n      </button>\\r\\n    </div>\\r\\n    <div>\\r\\n        <app-forecast-detailed *ngFor=\\\"let forecast of zipCodesForecast$ | async\\\" [forecast]=\\\"forecast\\\" (close)=\\\"onDeleteForecast($event)\\\"></app-forecast-detailed>\\r\\n    </div>\\r\\n</div>\";","export * from './forecast.service';\r\nexport * from './weather-api.service';\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\n// Locals\r\nimport { ForecastService } from \"../../services\";\r\n\r\nconst defaultDaysForForecast = 5;\r\n\r\n@Component({\r\n    selector: 'app-multi-day-forecast-page',\r\n    templateUrl: './multi-day-forecast-page.component.html',\r\n    styleUrls: []\r\n})\r\nexport class MultiDayForecastPageComponent implements OnInit {\r\n    readonly daysLength: number;\r\n    forecastDetails = [];\r\n    isLoading = false;\r\n\r\n    constructor(\r\n        private readonly activatedRoute: ActivatedRoute,\r\n        private readonly forecastService: ForecastService,\r\n    ) {\r\n        this.daysLength = this.activatedRoute.snapshot.data.days || defaultDaysForForecast;\r\n    }\r\n\r\n    ngOnInit() {\r\n        const routeZipCode = this.activatedRoute.snapshot.paramMap.get('zipCode');\r\n        if (routeZipCode && routeZipCode.length) {\r\n            this.isLoading = true;\r\n            this.forecastService\r\n                .getForecastForDays(routeZipCode, this.daysLength)\r\n                .subscribe(\r\n                    resp => this.forecastDetails = resp,\r\n                    (err) => console.error(err),\r\n                    () => this.isLoading = false);\r\n        } else {\r\n            console.error(`Zip code is missed! We can't show you forecast`);\r\n        }\r\n    }\r\n}","export default \"<h4>Template for {{daysLength}}-day forecast page:</h4>\\r\\n<div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"panel panel-default\\\">\\r\\n        <div class=\\\"panel-heading\\\">\\r\\n            <h3 class=\\\"panel-title\\\">{{daysLength}}-day forecast for Rancho Cordova</h3>\\r\\n        </div>\\r\\n        <app-loading-indicator *ngIf=\\\"isLoading\\\"></app-loading-indicator>\\r\\n        <ul class=\\\"list-group\\\">\\r\\n            <!---->\\r\\n            <li class=\\\"list-group-item\\\" *ngFor=\\\"let forecast of forecastDetails\\\">\\r\\n                {{forecast.date | date: 'EEEE'}}: {{forecast.currentConditions}} - Min: {{forecast.minToday | toCelsius}} - Max: {{forecast.maxToday | toCelsius}}\\r\\n\\r\\n                <app-weather-icon class=\\\"icon\\\" [weatherName]=\\\"forecast.currentConditions\\\"></app-weather-icon>\\r\\n            </li>\\r\\n        </ul>\\r\\n    </div>\\r\\n    <button class=\\\"btn btn-success\\\" tabindex=\\\"0\\\" [routerLink]=\\\"['../']\\\">&lt; Back to main page</button>\\r\\n</div>\";","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, ReplaySubject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n// Locals\r\nimport { StorageService } from 'src/app/core-module/services';\r\nimport { IForecastData, WeatherResponseData } from '../models';\r\nimport { WeatcherApiService } from './weather-api.service';\r\n\r\nconst forecastStorageKey = 'forecast-zip-codes';\r\n\r\n@Injectable()\r\nexport class ForecastService {\r\n    readonly addedZipCodes$ = new ReplaySubject<IForecastData[]>(1);\r\n    private forecastData: IForecastData[] = [];\r\n\r\n    constructor(\r\n        private readonly dataService: StorageService,\r\n        private readonly weatherApi: WeatcherApiService,\r\n    ) {\r\n        this.loadForecastFromStorage();\r\n    }\r\n\r\n    addNewZipCode(zipCode: string): void {\r\n        const currentZipCodes = this.dataService.getData<string[]>(forecastStorageKey) || [];\r\n        // make sure we have only unique zip codes\r\n        if (currentZipCodes.indexOf(zipCode) < 0) {\r\n            // add new value\r\n            currentZipCodes.push(zipCode);\r\n            this.dataService.saveData(forecastStorageKey, currentZipCodes);\r\n            this.weatherApi.getCurrentWeatherByZipCode(zipCode)\r\n                .subscribe(\r\n                    loadedData => this.addNewForecast(zipCode, loadedData),\r\n                    err => this.onForecastError(zipCode, err));\r\n        }\r\n    }\r\n\r\n    removeZipCode(zipCode: string): void {\r\n        const currentZipCodes = this.dataService.getData<string[]>(forecastStorageKey) || [];\r\n        const usedIndex = currentZipCodes.indexOf(zipCode);\r\n        if (usedIndex >= 0) {\r\n            // remove existing zip-code\r\n            currentZipCodes.splice(usedIndex, 1);\r\n            this.dataService.saveData(forecastStorageKey, currentZipCodes);\r\n            this.forecastData = this.forecastData.filter(f => f.zipCode !== zipCode);\r\n            this.addedZipCodes$.next(this.forecastData);\r\n        }\r\n    }\r\n\r\n    getForecastForDays(zipCode: string, days: number): Observable<IForecastData[]> {\r\n        return this.weatherApi.getMultipleDaysWeatherByZipCode(zipCode)\r\n            .pipe(map(resp => {\r\n                const currentDay = new Date().setHours(0, 0, 0, 0);\r\n                const resultArray: IForecastData[] = [];\r\n                let previousDate = null;\r\n                for (const respDay of resp.list) {\r\n                    const respDayDate = new Date(respDay.dt * 1000).setHours(0, 0, 0, 0);\r\n                    const diffTime = Math.abs(respDayDate - currentDay);\r\n                    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n                    if (diffDays >= days) {\r\n                        break;\r\n                    }\r\n                    previousDate = new Date(respDay.dt * 1000).setHours(0, 0, 0, 0);\r\n                    // TODO do I need to make totals?\r\n                    if (!resultArray.find(f => f.date === previousDate)) {\r\n                        resultArray.push({\r\n                            zipCode: zipCode,\r\n                            // Loaded\r\n                            locationName: resp.city.name,\r\n                            currentConditions: respDay.weather[0].main,\r\n                            maxToday: respDay.main.temp_max,\r\n                            minToday: respDay.main.temp_min,\r\n                            temperature: respDay.main.temp,\r\n                            date: previousDate,\r\n                        });\r\n                    }\r\n                }\r\n                return resultArray;\r\n            }));\r\n    }\r\n\r\n    private loadForecastFromStorage(): void {\r\n        const existingZipCodesData = this.dataService.getData<string[]>(forecastStorageKey);\r\n        if (existingZipCodesData) {\r\n            for (const zipCode of existingZipCodesData) {\r\n                this.weatherApi.getCurrentWeatherByZipCode(zipCode)\r\n                    .subscribe(\r\n                        loadedData => this.addNewForecast(zipCode, loadedData),\r\n                        err => this.onForecastError(zipCode, err));\r\n            }\r\n        }\r\n    }\r\n\r\n    private addNewForecast(zipCode: string, loadedData: WeatherResponseData): void {\r\n        if (loadedData && loadedData.weather && loadedData.weather.length) {\r\n            this.forecastData.push({\r\n                zipCode: zipCode,\r\n                // Loaded\r\n                locationName: loadedData.name,\r\n                currentConditions: loadedData.weather[0].main,\r\n                maxToday: loadedData.main.temp_max,\r\n                minToday: loadedData.main.temp_min,\r\n                temperature: loadedData.main.temp,\r\n                date: loadedData.dt * 1000,\r\n            });\r\n            this.addedZipCodes$.next(this.forecastData);\r\n        } else {\r\n            console.warn('Got incorrect forecast response');\r\n        }\r\n    }\r\n\r\n    private onForecastError(zipCode: string, err: HttpErrorResponse): void {\r\n        if (err.status === 404) {\r\n            // incorrect zip code\r\n            // just remove it\r\n            this.removeZipCode(zipCode);\r\n            console.warn(`ZipCode=${zipCode} can't be found, we will delete it from your storage!`);\r\n        }\r\n    }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\r\n// Locals\r\nimport { IForecastData } from \"../../models\";\r\n\r\n@Component({\r\n    selector: 'app-forecast-detailed',\r\n    templateUrl: './forecast-detailed.component.html',\r\n    styleUrls: []\r\n})\r\nexport class ForecastDetailedComponent {\r\n    @Input()\r\n    forecast: IForecastData;\r\n\r\n    @Output()\r\n    close = new EventEmitter<IForecastData>();\r\n\r\n    // events\r\n    onClose() {\r\n        this.close.emit(this.forecast);\r\n    }\r\n}"],"sourceRoot":"webpack:///"}